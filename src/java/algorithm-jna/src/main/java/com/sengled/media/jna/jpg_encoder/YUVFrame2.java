package com.sengled.media.jna.jpg_encoder;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * <i>native declaration : .\yuv.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class YUVFrame2 extends Structure {
	public int width;
	public int height;
	/** C type : char*[2] */
	public Pointer[] data = new Pointer[2];
	/** C type : int[2] */
	public int[] size = new int[2];
	public YUVFrame2() {
		super();
	}
	protected List<String> getFieldOrder() {
		return Arrays.asList("width", "height", "data", "size");
	}
	/**
	 * @param data C type : char*[2]<br>
	 * @param size C type : int[2]
	 */
	public YUVFrame2(int width, int height, Pointer data[], int size[]) {
		super();
		this.width = width;
		this.height = height;
		if ((data.length != this.data.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.data = data;
		if ((size.length != this.size.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.size = size;
	}
	public YUVFrame2(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends YUVFrame2 implements Structure.ByReference {
		
	};
	public static class ByValue extends YUVFrame2 implements Structure.ByValue {
		
	};
}
